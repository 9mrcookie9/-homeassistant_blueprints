blueprint:
  name: 'Bi-directional Control Between Light and Switch'
  description: 'Blueprint to synchronize a light and a switch without creating a loop.'
  domain: automation
  input:
    switch_entity:
      name: Wall Switch
      description: 'Select the switch to control the light'
      selector:
        entity:
          domain: switch
    light_entity:
      name: Light
      description: 'Select the light to control'
      selector:
        entity:
          domain: light
    delay_time:
      name: Delay (ms)
      description: 'Specify delay time in milliseconds before action is taken'
      default: 750
      selector:
        number:
          min: 0
          max: 5000
          unit_of_measurement: ms

trigger:
  - platform: state
    entity_id: !input switch_entity
  - platform: state
    entity_id: !input light_entity

action:
  - delay:
      milliseconds: !input delay_time
  - choose:
      - conditions:
          # If switch is turned on and light is off, turn on the light
          - condition: state
            entity_id: !input switch_entity
            state: "on"
          - condition: state
            entity_id: !input light_entity
            state: "off"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity

      - conditions:
          # If switch is turned off and light is on, turn off the light
          - condition: state
            entity_id: !input switch_entity
            state: "off"
          - condition: state
            entity_id: !input light_entity
            state: "on"
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input light_entity

      - conditions:
          # If light is turned on and switch is off, turn on the switch
          - condition: state
            entity_id: !input light_entity
            state: "on"
          - condition: state
            entity_id: !input switch_entity
            state: "off"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input switch_entity

      - conditions:
          # If light is turned off and switch is on, turn off the switch
          - condition: state
            entity_id: !input light_entity
            state: "off"
          - condition: state
            entity_id: !input switch_entity
            state: "on"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input switch_entity

mode: restart
